{"version":3,"file":"static/js/408.7f9202ae.chunk.js","mappings":"kOAiBA,EAdqB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACbC,EAAYC,IAAOF,EAAKG,YAAYC,OAAO,cAC3CC,EAAUH,IAAOF,EAAKM,UAAUF,OAAO,cAC/C,OACE,iBAAKG,UAAU,gDAAf,WACI,mCAAWP,EAAKQ,KAAhB,QACA,yCAAiBP,MACjB,uCAAeI,MACf,qCAAaL,EAAKS,WAClB,uCAAeT,EAAKU,cAG3B,ECuDD,EAjEsB,WAwBtB,IAvBE,IAAOC,GAAkBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAEA,EAAMC,KAAR,IAAnCH,eACAI,GAAeH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAEA,EAAMG,MAAR,IAAhCD,YAULD,EAAQ,CAAC,CACXG,GAAI,EACJC,MAAM,EACNf,WAAU,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAaI,UACzBb,SAAUJ,MAASkB,IAAI,EAAE,UAAUC,SACnCC,SAAU,EACVd,KAAM,YACNE,SAAU,GACVa,KAAM,YAIAC,EAAE,EAAEA,GAAC,OAACb,QAAD,IAACA,OAAD,EAACA,EAAgBc,QAAQD,IACpCV,EAAMY,KAAK,CACTC,OAAO,EACPV,GAAGN,EAAea,GAAGI,IACrBtB,SAASK,EAAea,GAAGK,QAAUlB,EAAea,GAAGK,QAAU,IAAIC,KAAKnB,EAAea,GAAGL,UAAY,OACxGhB,WAAWQ,EAAea,GAAGL,UAC7BX,KAAKG,EAAea,GAAGO,KACvBT,SAAS,GACTZ,SAAsC,gBAA7BC,EAAea,GAAGf,OAA2B,GAAiC,WAA7BE,EAAea,GAAGf,OAAsB,EAAiC,cAA7BE,EAAea,GAAGf,QAA0B,IAClJA,OAAOE,EAAea,GAAGf,OACzBF,UAAU,SACVgB,KAAK,YAGTS,QAAQC,IAAInB,GAIR,OACE,gBAAKP,UAAU,WAAf,SAEIQ,GAAeJ,IACf,+BAGF,SAAC,KAAD,WACE,SAAC,KAAD,CACCuB,UAAW,GACXC,OAhDM,CACb,CAAEC,KAAM,QAASC,KAAM,EAAGjC,OAAQ,YAClC,CAAEgC,KAAM,MAAOC,KAAM,EAAGjC,OAAQ,MA+CzBkC,QA5CO,CACd,CAAEP,KAAM,OAAQQ,MAAO,QAASC,MAAO,SA4ChC1B,MAAOA,EACP2B,MAdG,CAAC,CAAEC,OAAQ,EAAGC,OAAQ,EAAGpB,KAAM,IAelCqB,QAAS,SAAC5C,GAAD,OAAQ,SAAC,EAAD,CAAcA,KAAMA,GAA5B,EACT6C,eAAe,oBAOzB,EClDD,EAda,WACX,IAAO9B,GAAeH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAASA,EAAMG,MAAf,IAA3BD,YACP,OAKE,4BACA,SAAC+B,EAAA,EAAD,CAAMC,MAAK,iBAAKhC,QAAL,IAAKA,OAAL,EAAKA,EAAagB,KAAlB,YAAkCiB,YAAW,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAaiC,eACrE,SAAC,EAAD,MAGL,C","sources":["components/spaces/board/BoardTooltip.jsx","components/spaces/board/TimelineChart.jsx","components/spaces/board/Board.jsx"],"sourcesContent":["import moment from 'moment'\r\nimport React from 'react'\r\n\r\nconst BoardTooltip = ({data}) => {\r\n    const startDate = moment(data.start_date).format('DD MM YYYY')\r\n    const endDate = moment(data.end_date).format('DD MM YYYY')\r\n  return (\r\n    <div className='flex flex-col p-[1em] text-[white] bg-[black]'>\r\n        <h1>Name: {data.text} </h1>\r\n        <h1>Start Date: {startDate}</h1>\r\n        <h1>End Date: {endDate}</h1>\r\n        <h1>Status: {data.status}</h1>\r\n        <h1>Progress: {data.progress}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardTooltip","import { Gantt, MaterialTheme } from \"@dhtmlx/trial-react-gantt\";\r\nimport moment from \"moment\";\r\n import {useSelector} from 'react-redux'\r\nimport BoardTooltip from '../board/BoardTooltip'\r\n\r\nconst TimelineChart = ()=> {\r\n  const {tasksBySpaceId} = useSelector(state=>state.tasks)\r\n  const {singleSpace} = useSelector(state=>state.spaces)\r\n  \r\n  const scales = [\r\n    { unit: \"month\", step: 1, format: \"MMMM yyy\" },\r\n    { unit: \"day\", step: 1, format: \"d\" },\r\n];\r\n \r\n  const columns = [\r\n    { name: \"text\", label: \"Tasks\", width: \"100%\" },\r\n];\r\nlet tasks = [{\r\n  id: 1,\r\n  open: true,\r\n  start_date: singleSpace?.createdAt,\r\n  end_date: moment().add(3,'months').toDate(),\r\n  duration: 8,\r\n  text: \"All Tasks\",\r\n  progress: 60,\r\n  type: \"project\",\r\n\r\n}]\r\n\r\nfor(let i=0;i<tasksBySpaceId?.length; i++){\r\n  tasks.push({\r\n    parent:1,\r\n    id:tasksBySpaceId[i]._id,\r\n    end_date:tasksBySpaceId[i].dueDate ? tasksBySpaceId[i].dueDate : new Date(tasksBySpaceId[i].createdAt + 86400000),\r\n    start_date:tasksBySpaceId[i].createdAt,\r\n    text:tasksBySpaceId[i].name,\r\n    duration:10,\r\n    progress:tasksBySpaceId[i].status === \"IN PROGRESS\" ? 30 :tasksBySpaceId[i].status === \"FREEZE\" ? 0 : tasksBySpaceId[i].status === \"COMPLETED\" && 100  ,\r\n    status:tasksBySpaceId[i].status,\r\n    className:'ganttt',\r\n    type:'project',\r\n  }) \r\n}\r\nconsole.log(tasks)\r\n    \r\n \r\nconst links = [{ source: 2, target: 1, type: 0 }];\r\n    return (\r\n      <div className=\"h-[70vh]\">\r\n        {\r\n          singleSpace && tasksBySpaceId &&\r\n          <>\r\n          {/* <h1\r\n          className=\"mb-[1.5em] text-[1.2em]\">{singleSpace?.name}</h1> */}\r\n        <MaterialTheme>\r\n          <Gantt\r\n           cellWidth={50}  \r\n           scales={scales} \r\n           columns={columns} \r\n           tasks={tasks} \r\n           links={links}\r\n           tooltip={(data)=><BoardTooltip data={data} />}\r\n           task_row_class=\"!bg-[blue]\"\r\n           />\r\n        </MaterialTheme>\r\n          </>\r\n        }\r\n      </div>\r\n    );\r\n}\r\nexport default TimelineChart","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Head from '../../Head'\r\nimport TimelineChart from './TimelineChart'\r\n\r\nconst Board= () => {\r\n  const {singleSpace} = useSelector((state)=>state.spaces)\r\n  return (\r\n    // <div className='flex w-[1000px] border-[1px] border-[#ebebeb]'>\r\n    //   <div className='w-[30%] h-[500px] overflow-visible'><List /></div>\r\n    //   <div className='w-[70%] overflow-scroll border-[1px] border-[#ebebeb]'><Chart /> </div>\r\n    // </div>\r\n    <div>\r\n    <Head title={`${singleSpace?.name} - Board`} description={singleSpace?.description} />\r\n      <TimelineChart />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board"],"names":["data","startDate","moment","start_date","format","endDate","end_date","className","text","status","progress","tasksBySpaceId","useSelector","state","tasks","singleSpace","spaces","id","open","createdAt","add","toDate","duration","type","i","length","push","parent","_id","dueDate","Date","name","console","log","cellWidth","scales","unit","step","columns","label","width","links","source","target","tooltip","task_row_class","Head","title","description"],"sourceRoot":""}